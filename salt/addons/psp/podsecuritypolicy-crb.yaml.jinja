---
# TODO: In order for the lockdown PSP to be usable, we have to
# allow users to remove this CRB without us/salt recreating it.
# i.e. we must only apply this role to a cluster once.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: suse:caasp:psp:default-psp
roleRef:
  kind: ClusterRole
  name: suse:caasp:psp:unprivileged
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  apiGroup: rbac.authorization.k8s.io
  name: system:serviceaccounts
- kind: Group
  apiGroup: rbac.authorization.k8s.io
  name: system:authenticated

---
# Allow CaaSP services to use the suse:caasp:psp:privileged
# PodSecurityPolicy.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: suse:caasp:psp:caasp-service-psp
roleRef:
  kind: ClusterRole
  name: suse:caasp:psp:privileged
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: kube-dns
  namespace: kube-system
- kind: ServiceAccount
  name: flannel
  namespace: kube-system

---
# Allow cluster admins to use the suse:caasp:psp:privileged
# PodSecurityPolicy.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: suse:caasp:psp:cluster-admin-psp
roleRef:
  kind: ClusterRole
  name: suse:caasp:psp:privileged
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  name: "{{ pillar['ldap']['admin_group_name'] }}"
  apiGroup: rbac.authorization.k8s.io
